
set(CMAKE_CXX_STANDARD 20)

cmake_minimum_required(VERSION 3.16)
project(ownage)

add_executable(ownage src/main.cpp)
#target_link_libraries(main PRIVATE sfml-graphics)
#target_compile_features(main PRIVATE cxx_std_17)

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
option(BUILD_SHARED_LIBS "Build shared libraries" OFF)

set(CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/cmake_modules")
find_package(SFML REQUIRED system window graphics network audio)
include_directories("c:/SFML/include")
#target_link_libraries(ownage sfml-system sfml-window sfml-graphics sfml-audio)
target_link_libraries(ownage ${SFML_LIBRARIES} ${SFML_DEPENDENCIES})

#file(COPY assets DESTINATION ${CMAKE_BINARY_DIR})

#include(FetchContent)
#FetchContent_Declare(SFML
#        GIT_REPOSITORY https://github.com/SFML/SFML.git
#        GIT_TAG 2.6.x)
#FetchContent_MakeAvailable(SFML)

#if(WIN32)
#    file(GLOB BINARY_DEP_DLLS "${SFML_INCLUDE_DIR}/../bin/*.dll")
#    file(COPY ${BINARY_DEP_DLLS} DESTINATION ${CMAKE_BINARY_DIR})
#    file(GLOB MINGW_DEP_DLLS "C:/mingw64/bin/*.dll")
#    file(COPY ${MINGW_DEP_DLLS} DESTINATION ${CMAKE_BINARY_DIR})
#endif()

#if(WIN32)
#    add_custom_command(
#            TARGET ownage
#            COMMENT "Copy OpenAL DLL"
#            PRE_BUILD COMMAND ${CMAKE_COMMAND} -E copy ${SFML_SOURCE_DIR}/extlibs/bin/$<IF:$<EQUAL:${CMAKE_SIZEOF_VOID_P},8>,x64,x86>/openal32.dll $<TARGET_FILE_DIR:ownage>
#            VERBATIM)
#endif()
